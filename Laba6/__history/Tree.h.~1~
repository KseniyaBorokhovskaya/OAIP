//---------------------------------------------------------------------------

#ifndef TreeH
#define TreeH
#include <vcl.h>
//---------------------------------------------------------------------------
class Node {
private:
	int WorkmanID;
	String Name;
	Node *left;
	Node *right;
};

class Tree {
private:
	Node * head, *current, *prev;
	AnsiString stringToShowTraverse;
public:

	Tree(){}
	~Tree();

	AnsiString GetStringToShowTraverse()
	{
		return stringToShowTraverse;
	};

	void Create(Node **root, String name, int workmanID);
	void Add(String name, int workmanID);


	void Delete(Node *node);
	TreeItem* Find(int workmanID);


	void Delete(TMemo *Memo, int workmanID, bool &isDeletedSuccesful);
	void DeleteNode(TMemo *Memo, int workmanID);


	void Search(TMemo *Memo, int workmanID);




	//Прямой проход
	void Direct();
	void Direct(Node *node);

	//Проход в возрастании
	void Increase();
	void Increase(Node *node);

	// Обратный проход дерева
	void Back();
	void Back(Node *node);

	//Сбалансировать дерево
	void Balance();
	void tree_to_vine(Node *node, int *size);
	void vine_to_tree(Node *node, int *size);
	void compress(Node *node, int count);


};
#endif
